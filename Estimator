# Introduction
1.Estimator encapsulates 4 functions of ML project: train, evaluation, prediction, serving.
2.Run estimator based model on local or distributed evironment; on CPUs or GPUs without changing model.
3.Estimator provides a distributed train loop: build graph, init variables, load data, checkpoint model, summary for tensorboard
4. Seperate data input from model

# A estimator program
## Input_fn
Return a Dataset object which contains the tuple: (features, labels). Note that features and lebels are in the one element of Dataset
1.features: a dict with key as the feature names (which will be used in specify feature columns) and value as the tensor
2.labels: a tensor
## Feature columns
1. feature column class works like a specification: describing how the model should use raw input data from the features dict
## Estimator
1. Instantiate an estimator object and pass the feature column objects to it
## Call methods of estimator
1. Call train, inference, evaluation method and pass input_fn

# Configure checkpoints
1. model_dir of tf.estimator specify the dir of model file and event file (for tensorboard)
2. Create a tf.estimator.RunConfig object that defines the checkpoint schedule and pass it to config of estimator
3. Train, evaluate, inference methods create a new model graph and initialize the variables from checkpoint file
